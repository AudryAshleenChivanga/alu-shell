#!/usr/bin/env bash
#Manages
#shellcheck CS2009

PID_FILE="/var/run/my_process.pid"

# Function to check if the process is running
is_process_running() {
    if [ -f "$PID_FILE" ]; then
        pid=$(cat "$PID_FILE")
        if ps -p $pid > /dev/null; then
            return 0  # Process is running
        else
            return 1  # Process is not running
        fi
    else
        return 1  # Process is not running
    fi
}

# Function to start the process
start_process() {
    if is_process_running; then
        echo "manage_my_process is already running"
    else
        # Start the process
        # Your code for starting the process goes here
        
        # Get the process ID and save it to a file
        echo "$$" > "$PID_FILE"
        
        echo "manage_my_process started"
    fi
}

# Function to stop the process
stop_process() {
    if is_process_running; then
        # Stop the process
        # Your code for stopping the process goes here
        
        # Remove the PID file
        rm "$PID_FILE"
        
        echo "manage_my_process stopped"
    else
        echo "manage_my_process is not running"
    fi
}

# Function to restart the process
restart_process() {
    if is_process_running; then
        # Stop the process
        # Your code for stopping the process goes here
        
        # Remove the PID file
        rm "$PID_FILE"
    fi
    
    # Start the process
    # Your code for starting the process goes here
    
    # Get the process ID and save it to a file
    echo "$$" > "$PID_FILE"
    
    echo "manage_my_process restarted"
}

# Main script logic
if [ "$1" == "start" ]; then
    start_process
elif [ "$1" == "stop" ]; then
    stop_process
elif [ "$1" == "restart" ]; then
    restart_process
else
    echo "Usage: manage_my_process {start|stop|restart}"
fi
